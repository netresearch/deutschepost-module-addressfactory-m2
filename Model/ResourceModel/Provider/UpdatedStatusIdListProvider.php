<?php
/**
 * See LICENSE.md for license details.
 */
declare(strict_types=1);

namespace PostDirekt\Addressfactory\Model\ResourceModel\Provider;


use Magento\Sales\Model\ResourceModel\Provider\NotSyncedDataProviderInterface;
use PostDirekt\Addressfactory\Model\ResourceModel\AnalysisStatus;
use Psr\Log\LoggerInterface;

class UpdatedStatusIdListProvider implements NotSyncedDataProviderInterface
{
    /**
     * @var AnalysisStatus
     */
    private $resource;

    /**
     * @var LoggerInterface
     */
    private $logger;

    public function __construct(
        AnalysisStatus $resource,
        LoggerInterface $logger
    ) {
        $this->resource = $resource;
        $this->logger = $logger;
    }

    /**
     * Obtain a list of order IDs to update.
     *
     * The ID list is generated by comparing values in the entity table and the grid table.
     *
     * @param string $mainTableName Source table name (sales_order by default).
     * @param string $gridTableName Grid table name (sales_order_grid by default).
     * @return string[]
     */
    public function getIds($mainTableName, $gridTableName): array
    {
        try {
            $connection = $this->resource->getConnection();
            $mainTableName = $this->resource->getMainTable();

            $mainTableName = $connection->getTableName($mainTableName);
            $gridTableName = $connection->getTableName($gridTableName);

            $select = $connection->select()
                ->from(['analysis_status' => $mainTableName], ['order_id'])
                ->join(['order_grid' => $gridTableName], 'analysis_status.order_id = order_grid.entity_id', [])
                ->where('order_grid.postdirekt_addressfactory_analysis_status != analysis_status.status');

            return $connection->fetchCol($select);
        } catch (\Exception $exception) {
            // variety of unhandled exceptions may be raised by db libraries
            $this->logger->error('Unable to determine order IDs for grid update.', ['exception' => $exception]);
            return [];
        }
    }
}
